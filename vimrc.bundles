" Modeline and Notes
" vim: set sw=4 ts=4 sts=4 et tw=78

" Basics
set nocompatible        " Must be first line
set background=dark     " Assume a dark background

" Setup Bundle Support
filetype off
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

" Add an UnBundle command
function! UnBundle(arg, ...)
let bundle = vundle#config#init_bundle(a:arg, a:000)
call filter(g:bundles, 'v:val["name_spec"] != "' . a:arg . '"')
endfunction

com! -nargs=+         UnBundle
\ call UnBundle(<args>)

" Deps
Bundle 'gmarik/vundle'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
if executable('ag')
    Bundle 'mileszs/ack.vim'
    let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
    Bundle 'mileszs/ack.vim'
elseif executable('ack')
    Bundle 'mileszs/ack.vim'
endif

"Personal
Bundle 'bkad/CamelCaseMotion'
Bundle 'Parameter-Text-Objects'
"Bundle 'PreciseJump'
Bundle 'Tabmerge'
if v:version > 702
    "Bundle 'Shougo/unite.vim'
    Bundle 'regedarek/ZoomWin'
endif
Bundle 'airblade/vim-gitgutter'
Bundle 'Transparent'
Bundle 'oblitum/rainbow'
Bundle 't9md/vim-chef'
"Bundle 'TabBar'
Bundle 'goldfeld/ctrlr.vim'
Bundle 'xolox/vim-session'
Bundle 'xolox/vim-misc'
Bundle 'christoomey/vim-tmux-navigator'
Bundle 'bufkill.vim'
Bundle 'wesQ3/vim-windowswap'
"Bundle 'PotatoesMaster/i3-vim-syntax'
Bundle 'chrisbra/csv.vim'
Bundle 'tyru/regbuf.vim'
Bundle 'tpope/vim-repeat'
Bundle 'elzr/vim-json'
Bundle 'vsearch.vim'
Bundle 'CycleColor'
"Bundle 'Figlet.vim'
"Bundle 'YankRing.vim'
"Bundle 'danro/rename.vim'
Bundle 'tpope/vim-unimpaired'
"Bundle 'tpope/vim-scriptease'
"Bundle 'tpope/vim-sleuth'
"Bundle 'tpope/vim-eunuch'
"Bundle 'tpope/vim-speeddating'
"Bundle 'tpope/vim-rsi'
"Bundle 'tpope/vim-obsession'
"Bundle 'tpope/vim-characterize'
"Bundle 'tpope/vim-afterimage'
"Bundle 'tpope/vim-flatfoot'
"Bundle 'dhruvasagar/vim-prosession'
"Bundle 'tommcdo/vim-lion'
"Bundle 'wellle/targets.vim'
"Bundle 'spiiph/vim-space'
"Bundle 'zefei/vim-colortuner'
Bundle('https://bitbucket.org/larsyencken/vim-drake-syntax.git')

" Useless
"Bundle 'AndrewRadev/sideways.vim'
"Bundle 'swap-parameters'

if !exists('g:spf13_bundle_groups')
    let g:spf13_bundle_groups=['general', 'writing', 'neocomplcache', 'programming', 'php', 'ruby', 'python', 'twig', 'javascript', 'html', 'misc',]
endif

 "General
if count(g:spf13_bundle_groups, 'general')
    if v:version > 702
        Bundle 'scrooloose/nerdtree'
        Bundle 'Lokaltog/vim-easymotion'
    endif
    "Bundle 'altercation/vim-colors-solarized'
    Bundle 'spf13/vim-colors'
    Bundle 'tpope/vim-surround'
    "Bundle 'spf13/vim-autoclose'
    Bundle 'kien/ctrlp.vim'
    Bundle 'terryma/vim-multiple-cursors'
    "Bundle 'vim-scripts/sessionman.vim'
    Bundle 'matchit.zip'
    if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
        Bundle 'Lokaltog/powerline', 'rtp':'/powerline/bindings/vim'
    elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
        Bundle 'Lokaltog/vim-powerline'
    else
        Bundle 'bling/vim-airline'
    endif
    "Bundle 'bling/vim-bufferline'
    "Bundle 'godlygeek/csapprox'
    Bundle 'jistr/vim-nerdtree-tabs'
    Bundle 'flazz/vim-colorschemes'
    Bundle 'mbbill/undotree'
    Bundle 'nathanaelkane/vim-indent-guides'
    "if !exists('g:spf13_no_views')
        "Bundle 'vim-scripts/restore_view.vim'
    "endif
    "Bundle 'mhinz/vim-signify'
    Bundle 'tpope/vim-abolish.git'
    Bundle 'osyo-manga/vim-over'
    Bundle 'justinmk/vim-sneak'
    Bundle 'kana/vim-textobj-user'
    Bundle 'kana/vim-textobj-indent'
endif

" Writing
if count(g:spf13_bundle_groups, 'writing')
    Bundle 'reedes/vim-litecorrect'
    Bundle 'reedes/vim-textobj-sentence'
    Bundle 'reedes/vim-textobj-quote'
    Bundle 'reedes/vim-wordy'
endif

" General Programming
if count(g:spf13_bundle_groups, 'programming')
    " Pick one of the checksyntax, jslint, or syntastic
    Bundle 'scrooloose/syntastic'
    Bundle 'tpope/vim-fugitive'
    Bundle 'mattn/webapi-vim'
    Bundle 'mattn/gist-vim'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'godlygeek/tabular'
    if executable('ctags')
        Bundle 'majutsushi/tagbar'
    endif
endif

if v:version > 702
    " Snippets & AutoComplete
    if count(g:spf13_bundle_groups, 'snipmate')
        Bundle 'garbas/vim-snipmate'
        Bundle 'honza/vim-snippets'
        " Source support_function.vim to support vim-snippets.
        if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
            source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
        endif
    elseif count(g:spf13_bundle_groups, 'youcompleteme')
        Bundle 'Valloric/YouCompleteMe'
        Bundle 'SirVer/ultisnips'
        Bundle 'honza/vim-snippets'
    elseif count(g:spf13_bundle_groups, 'neocomplcache')
        Bundle 'Shougo/neocomplcache'
        Bundle 'Shougo/neosnippet'
        "Bundle 'Shougo/neosnippet-snippets'
        Bundle 'honza/vim-snippets'
    elseif count(g:spf13_bundle_groups, 'neocomplete')
        Bundle 'Shougo/neocomplete.vim.git'
        Bundle 'Shougo/neosnippet'
        Bundle 'Shougo/neosnippet-snippets'
        Bundle 'honza/vim-snippets'
    endif
    "
endif

" PHP
if count(g:spf13_bundle_groups, 'php')
    Bundle 'spf13/PIV'
    Bundle 'arnaud-lb/vim-php-namespace'
endif
"

" Python
if count(g:spf13_bundle_groups, 'python')
    "Bundle 'python.vim'
    Bundle 'python_match.vim'
    Bundle 'pythoncomplete'
endif
"

" Javascript
if count(g:spf13_bundle_groups, 'javascript')
    Bundle 'groenewege/vim-less'
    Bundle 'pangloss/vim-javascript'
    Bundle 'briancollins/vim-jst'
    Bundle 'kchmck/vim-coffee-script'
endif
"

" Scala
if count(g:spf13_bundle_groups, 'scala')
    Bundle 'derekwyatt/vim-scala'
    Bundle 'derekwyatt/vim-sbt'
    Bundle 'rompetroll/vim-scalariform'
endif
"

" Haskell
if count(g:spf13_bundle_groups, 'haskell')
    Bundle 'travitch/hasksyn'
    Bundle 'dag/vim2hs'
    Bundle 'Twinside/vim-haskellConceal'
    Bundle 'Twinside/vim-haskellFold'
    Bundle 'lukerandall/haskellmode-vim'
    Bundle 'eagletmt/neco-ghc'
    Bundle 'eagletmt/ghcmod-vim'
    Bundle 'Shougo/vimproc'
    Bundle 'adinapoli/cumino'
    Bundle 'bitc/vim-hdevtools'
endif
"

" HTML
if count(g:spf13_bundle_groups, 'html')
    Bundle 'amirh/HTML-AutoCloseTag'
    Bundle 'hail2u/vim-css3-syntax'
    Bundle 'gorodinskiy/vim-coloresque'
    Bundle 'tpope/vim-haml'
endif
"

" Ruby
if count(g:spf13_bundle_groups, 'ruby')
    Bundle 'tpope/vim-rails'
    "let g:rubycomplete_buffer_loading = 1
    "let g:rubycomplete_classes_in_global = 1
    "let g:rubycomplete_rails = 1
endif
"

" Go Lang
if count(g:spf13_bundle_groups, 'go')
    "Bundle 'Blackrush/vim-gocode'
    Bundle 'fatih/vim-go'
endif
"

" Misc
if count(g:spf13_bundle_groups, 'misc')
    Bundle 'tpope/vim-markdown'
    Bundle 'spf13/vim-preview'
    Bundle 'tpope/vim-cucumber'
    "Bundle 'quentindecock/vim-cucumber-align-pipes'
    "Bundle 'Puppet-Syntax-Highlighting'
endif
"

" Twig
if count(g:spf13_bundle_groups, 'twig')
    Bundle 'beyondwords/vim-twig'
endif
