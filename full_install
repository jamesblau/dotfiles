#!/bin/bash -xe

echo "These dotfiles assume specific hardware; some edits may be required."
echo "Font sizes for t420s:"
echo "i3/config: 5 (main) and 7 (i3bar)"
echo "kitty: 8.0"
echo "rofi: 15"

cd
touch .not_a_server
cd $HOME/dotfiles
./install

# Allow conf script to access hardware model number and to set mouse sensitivity
# TODO: check if necessary
  # sudo chown $USER /sys/devices/virtual/dmi/id/product_version

# Restore from backup
  # authorize from borgbase
  # mount and fetch
    # pbin
    # pdotfiles
    # desired large directories

# crontab -e add:
  # */5 * * * * $HOME/dotfiles/bin/i3batwarn.sh
  # TODO: fix borg script prompt cronjob
  # 0 18 * * * $HOME/bin/backup

# firefox
  # sign in
  # about:config
    # toolkit.legacyUserProfileCustomizations.stylesheets to true
    # if needed, devPixelsPerPx to e.g. 1
    # to see only changed settings, go to Ctrl+Shift+K console:
      # allow pasting
      # var elements = document.getElementsByTagName('tr');
      # [...elements].filter(
        # el => !el.classList.contains('has-user-value')
      # ).forEach(
        # el => el.style.display = (el.style.display === 'none') ? 'table-row' : 'none'
      # );
  # curl -fsSl https://raw.githubusercontent.com/tridactyl/tridactyl/master/native/install.sh -o /tmp/trinativeinstall.sh && \
    # bash /tmp/trinativeinstall.sh 1.20.2
  # find and cd into user directory in ~/.mozilla/firefox/
    # ln -s ~/dotfiles/firefox/userChrome.css chrome/userChrome.css

# Download and install nordvpn

# Install low-latency kernel module

sudo usermod -a -G video $USER

sudo add-apt-repository universe
sudo add-apt-repository ppa:lutris-team/lutris
sudo add-apt-repository ppa:lokkju/java-compat
sudo add-apt-repository ppa:kazam-team/stable-series

sudo apt update
sudo apt upgrade

# Might not need all of these
# TODO: filter unneeded
# sudo apt install libao-dev libasound2 libasound2 libatk-adaptor libc++1 libdbus-1-dev libenet-dev libfontconfig1-dev libfuse-dev libgail-common libgtk2.0-dev libharfbuzz-dev libjack-jackd2-0 libjack-jackd2-0 libopenal-dev libopengl0 libqt5webenginewidgets5 libreadline-dev libsndio-dev libsndio7.0 libsndio7.0 libsoil-dev libsoundtouch-dev libswresample-dev libvulkan1 libvulkan1 libwebkit2gtk-4.0-37 libwxbase3.0-dev libx11-xcb-dev libxcb-xtest0-dev libxcb-xtest0 libxcomposite1 libxcomposite1 libxcursor-dev libxcursor1 libxcursor1 libxext-dev libxi6 libxi6 libxinerama-dev libxkbcommon-x11-dev libxrandr2 libxrandr2 libxss1 libxss1 libxtst6 libxxf86vm-dev python-gi-dev python-wxgtk3.0-dev rofi-dev tcllib zlib1g-dev zlib1g-dev

sudo apt install appstream arandr aria2 autocutsel autorandr axel bd blueman borgbackup borgbackup-doc chkrootkit chromium-browser clamav clipit cmake curl dict dnsutils espeak-ng-espeak exuberant-ctags feh fonts-inconsolata fuse gawk gdebi-core gettext git golang-go google-chrome-stable gparted gpick htop hwinfo i3 i3lock i3status i3-wm ipython3 jupyter-nbconvert kakoune kitty light lutris minetest mplayer mpv neovim node-gyp nodejs npm octave openssh-client p7zip-full parallel pavucontrol pavumeter pinta pkg-config playerctl poppler-utils qalc qutebrowser ranger read-edid redshift rename ripgrep rlwrap rofi scala silversearcher-ag steam stterm sudoku taskwarrior tcllib termit tmux translate-shell transmission tree udiskie unzip vim vlc vpnc wget winbind xbacklight xbindkeys xcape xclip xdotool xsel xss-lock xvkbd zoom

sudo apt install --no-install-recommends ca-certificates g++ gcc libasound2-dev libavcodec-dev libavformat-dev libavutil-dev libbluetooth-dev libbz2-dev libcurl4-openssl-dev libevdev-dev libhidapi-dev liblzo2-dev libmbedtls-dev libminiupnpc-dev libpng-dev libpugixml-dev libpulse-dev libsfml-dev libswscale-dev libsystemd-dev libudev-dev libusb-1.0-0-dev libxi-dev libxrandr-dev libzstd-dev make pkg-config qtbase5-dev qtbase5-private-dev

sudo ln -s /usr/bin/python3 /usr/bin/python

mkdir -p ~/src/opensource

cd ~/src/opensource && \
  gclone https://github.com/gilbertw1/roficlip.git

cd ~/src/opensource && \
  gclone https://github.com/cspeterson/splatmoji.git

cd ~/src/opensource && \
  gclone https://github.com/mrichar1/clipster.git

cd ~/src/opensource && \
  gclone https://github.com/junegunn/fzf.git && \
  ./install
# TODO: needed?
# ln -s ~/dotfiles/.fzf.bash .fzf.bash

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh && \
  cd ~/src/opensource && \
  gclone https://github.com/I60R/page.git && \
  rustup install stable && \
  rustup default stable && \
  cargo install --path . && \

cd ~/src/opensource && \
  gclone https://github.com/Birdthulu/FPM-Installer.git && \
  sh -c "$(curl -Ls https://github.com/Birdthulu/FPM-Installer/raw/master/setup)"

cd ~/src/opensource && \
  gclone https://github.com/neovim/neovim.git && \
  git checkout stable && \
  make CMAKE_BUILD_TYPE=Release

sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - && \
  sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

sudo snap install discord

go get github.com/prasmussen/gdrive
  # in case of credentials problem:
    # make credential for dummy project
      # https://console.developers.google.com/apis/credentials
    # edit binary
      # sed -i "s|367116221053-7n0vf5akeru7on6o2fjinrecpdoe99eg.apps.googleusercontent.com|INSERT_DOMAIN_HERE|g" path/to/the/executable/gdrive
      # sed -i "s|1qsNodXNaWq1mQuBjUjmvhoO|INSERT_TOKEN_HERE|g" path/to/the/executable/gdrive

# If trackpoint speed cannot be increased sufficiently:
  # "DEVICE" below is e.g. "TPPS/2 IBM TrackPoint"
  # add to /etc/udev/rules.d/trackpoint.rules:
    # ACTION=="add", SUBSYSTEM=="input", ATTR{name}=="DEVICE", ATTR{device/sensitivity}="255", ATTR{device/speed}="255"<Paste>

echo "Read this file for reminders and instructions to restore more folders, set up crontab, and configure firefox."
