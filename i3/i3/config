# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# It is conceivable that you might want to change this
set $user james

# Basic i3 configuration
set $mod Mod4
set $kitty kitty --config ~/.kitty.conf
set $kitty_open kitty --config ~/.kitty.conf bash --rcfile ~/.bashrc -c
font pango:DejaVu Sans Mono Bold 7
new_window 1pixel
workspace_layout tabbed

# Reload the configuration file
bindsym $mod+Shift+c reload
# Restart i3 in place (preserves layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Startup things
exec --no-startup-id clipster -d
exec --no-startup-id blueman-applet
exec --no-startup-id blueman-tray
exec --no-startup-id nordvpn
exec --no-startup-id udiskie
exec_always --no-startup-id /usr/bin/xrandr --dpi 150
exec_always --no-startup-id ~/bin/lid-lock
exec_always --no-startup-id feh --no-fehbg --bg-scale ~/Pictures/deepdream.jpg
exec_always --no-startup-id ~/bin/conf

# Go to previous workspace/screen
bindsym $mod+o workspace back_and_forth
bindsym $mod+Shift+o move container to workspace back_and_forth
bindsym $mod+Control+o move container to workspace 1; workspace back_and_forth

# Scratchpad
bindsym $mod+Control+Shift+minus move scratchpad
bindsym $mod+Control+minus scratchpad show
# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Start a terminal
bindsym $mod+Return exec $kitty
# bindsym $mod+Return exec termite
bindsym $mod+Control+Shift+Return exec $kitty -e tmux
# bindsym $mod+Shift+Return exec gnome-terminal
# bindsym $mod+Control+Shift+Return exec gnome-terminal -e "nvim -u ~/dotfiles/nvim/nvimrc_terminal -c 'terminal bash --rcfile ~/dotfiles/bash/bashrc_neovim'"
# bindsym $mod+s exec stterm
# bindsym $mod+Shift+s exec stterm -e tmux
# bindsym $mod+Control+Shift+s exec stterm -e bash -c 'nvim -u ~/dotfiles/nvim/nvimrc_terminal -c ter'

# Split terminal in same working directory
bindsym --release Mod1+g split v; exec xdotool key --clearmodifiers alt+Return
bindsym --release Mod1+v split h; exec xdotool key --clearmodifiers alt+Return

# Open programs
bindsym $mod+u exec $kitty nmtui-connect
bindsym $mod+Shift+u exec $kitty nmtui

# TODO: Fix audio bindings with (bluetooth?) headphones active

# Reused audio and backlight commands
set $toggle_mute "amixer -D pulse set Master toggle; killall -USR1 i3status"
set $volume_down "~/bin/adjust_volume -5%"
set $volume_up "~/bin/adjust_volume +5%"
set $toggle_mic_mute "~/bin/toggle_mic"
set $backlight_down "light -U 20"
set $backlight_up "light -A 20"

# Audio and backlight commands with Super
bindsym $mod+F1 exec $toggle_mute
bindsym $mod+F2 exec $volume_down
bindsym $mod+F3 exec $volume_up
bindsym $mod+Control+F2 exec "~/bin/adjust_volume -1%"
bindsym $mod+Control+F3 exec "~/bin/adjust_volume +1%"
bindsym $mod+F4 exec $toggle_mic_mute
bindsym $mod+Shift+F2 exec "~/bin/adjust_mic -5%"
bindsym $mod+Shift+F3 exec "~/bin/adjust_mic +5%"
bindsym $mod+F5 exec $backlight_down
bindsym $mod+F6 exec $backlight_up
bindsym $mod+Shift+F5 exec "light -S 0"
bindsym $mod+Shift+F6 exec "light -S 100"
# TODO?: round volume to nearest 5

# Audio, backlight, and other commands with special keys
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioMute exec $toggle_mute
bindsym XF86AudioLowerVolume exec $volume_down
bindsym XF86AudioRaiseVolume exec $volume_up
bindsym XF86AudioMicMute exec $toggle_mic_mute
bindsym XF86MonBrightnessDown exec $backlight_down
bindsym XF86MonBrightnessUp exec $backlight_up
bindsym XF86WLAN exec toggle_wifi
bindsym XF86Favorites kill
# These work out of the box
# bindsym XF86AudioPlay
# bindsym XF86AudioPause
# bindsym XF86Bluetooth
# TODO?: use for something
# bindsym XF86Display
# bindsym XF86Tools
# bindsym XF86WakeUp

# Fix wifi
bindsym $mod+F8 exec toggle_wifi
bindsym $mod+Control+F8 exec toggle_radio
bindsym $mod+Control+Shift+F8 exec toggle_vpn

# Kill focused window
bindsym $mod+Control+Shift+BackSpace kill

# Re-run conf
bindsym $mod+BackSpace exec $kitty bash -c ~/bin/conf

# Sleep, suspend, shutdown, reboot, logout, or lock computer
bindsym $mod+Shift+Delete exec ~/bin/sleep_shutdown_etc; $d

# Rofi pickers
# Calculator
# bindsym $mod+c exec --no-startup-id rofi -show calc -modi "calc:qalc +u8" -no-disable-history
bindsym $mod+c exec --no-startup-id rofi -show calc -modi calc -no-show-match -no-sort
# Program
bindsym $mod+d exec --no-startup-id PATH=$PATH:/home/$USER/bin:/home/$USER/pbin rofi -case-sensitive -show run
# Window
bindsym $mod+x exec --no-startup-id rofi -show window

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Split in horizontal orientation, yes I know it says 'v'
bindsym $mod+g split v

# Split in vertical orientation, yes I know it says 'h'
bindsym $mod+v split h

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Focus the parent container
bindsym $mod+p focus parent

# Focus the child container
# TODO: Replace?
# bindsym $mod+n focus child

# Switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# Move focused container to workspace and go there
bindsym $mod+Control+1 move container to workspace 1; workspace 1
bindsym $mod+Control+2 move container to workspace 2; workspace 2
bindsym $mod+Control+3 move container to workspace 3; workspace 3
bindsym $mod+Control+4 move container to workspace 4; workspace 4
bindsym $mod+Control+5 move container to workspace 5; workspace 5
bindsym $mod+Control+6 move container to workspace 6; workspace 6
bindsym $mod+Control+7 move container to workspace 7; workspace 7
bindsym $mod+Control+8 move container to workspace 8; workspace 8
bindsym $mod+Control+9 move container to workspace 9; workspace 9
bindsym $mod+Control+0 move container to workspace 10; workspace 10

# Move parent container to workspace and go there
bindsym $mod+Control+Shift+1 focus parent; move container to workspace 1; workspace 1
bindsym $mod+Control+Shift+2 focus parent; move container to workspace 2; workspace 2
bindsym $mod+Control+Shift+3 focus parent; move container to workspace 3; workspace 3
bindsym $mod+Control+Shift+4 focus parent; move container to workspace 4; workspace 4
bindsym $mod+Control+Shift+5 focus parent; move container to workspace 5; workspace 5
bindsym $mod+Control+Shift+6 focus parent; move container to workspace 6; workspace 6
bindsym $mod+Control+Shift+7 focus parent; move container to workspace 7; workspace 7
bindsym $mod+Control+Shift+8 focus parent; move container to workspace 8; workspace 8
bindsym $mod+Control+Shift+9 focus parent; move container to workspace 9; workspace 9
bindsym $mod+Control+Shift+0 focus parent; move container to workspace 10; workspace 10

# Modes
set $d mode "default"

bindsym $mod+n mode "quick_open"
mode "quick_open" {
  bindsym a exec arandr; $d
  bindsym b exec $kitty_open 'nvim ~/dotfiles/bash/bashrc ~/dotfiles/bash/bashrc_neovim'; $d
  bindsym c exec $kitty_open 'nvim ~/bin/conf ~/bin/conf_keyboard ~/dotfiles/install ~/dotfiles/full_install'; $d
  bindsym d exec $kitty_open 'nvim ~/Documents/quick_open/digraphs'; $d
  bindsym e exec $kitty_open 'xclip -o | nvim -u ~/dotfiles/nvim/nvimrc_clipboard'; $d
  bindsym f exec $kitty_open 'nvim ~/dotfiles/tridactyl/tridactylrc ~/dotfiles/firefox/userChrome.css'; $d
  bindsym g exec say $(xsel -o); $d
  bindsym h exec $kitty_open 'nvim $(xclip -o)'; $d
  bindsym i exec $kitty_open 'nvim ~/dotfiles/i3/i3/config ~/dotfiles/i3/i3status.conf ~/dotfiles/bin/i3status_custom.sh'; $d
  bindsym j exec $kitty_open 'nvim ~/Documents/quick_open/judo'; $d
  bindsym k exec $kitty_open 'nvim ~/dotfiles/kitty/kitty.conf ~/dotfiles/rofi/config'; $d
  bindsym l exec $kitty_open 'ranger'; $d
  bindsym m exec pavucontrol; $d
  bindsym n exec toggle_sleep_noise; $d
  bindsym o exec $kitty --directory='~/Downloads'; $d
  bindsym p exec $kitty_open 'nvim ~/Documents/quick_open/nato'; $d
  bindsym q exec $kitty_open 'nvim ~/Documents/todo'; $d
  bindsym r exec $kitty_open 'htop'; $d
  bindsym s exec feh ~/current.png; $d
  bindsym t exec $kitty_open 'nvim ~/dotfiles/tmux/tmux.conf'; $d
  bindsym u exec toggle_touchpad; $d
  bindsym v exec $kitty_open 'nvim ~/dotfiles/vim/vimrc ~/dotfiles/vim/vimrc.bundles ~/dotfiles/nvim/nvimrc ~/dotfiles/page/pagerc ~/dotfiles/nvim/nvimrc_terminal ~/dotfiles/nvim/nvimrc_clipboard ~/dotfiles/ftplugin/notes.vim ~/dotfiles/syntax/notes.vim ~/dotfiles/ftdetect/notes.vim ~/pdotfiles/pvimrc ~/pdotfiles/pvimrc_todo ~/dotfiles/nvim/nvimrc_static'; $d
  bindsym w exec $kitty_open '~/pbin/worth'; $d
  bindsym x exec toggle_screenkey; $d
  bindsym y exec $kitty_open 'nvim -c Calendar'; $d
  bindsym z exec toggle_zoom; $d

  bindsym Return $d
  bindsym Escape $d
}

bindsym $mod+r mode "resize"
mode "resize" {
  bindsym u resize grow left 50 px or 50 ppt
  bindsym i resize grow down 50 px or 50 ppt
  bindsym o resize grow up 50 px or 50 ppt
  bindsym p resize grow right 50 px or 50 ppt
  bindsym Shift+u resize shrink right 50 px or 50 ppt
  bindsym Shift+i resize shrink up 50 px or 50 ppt
  bindsym Shift+o resize shrink down 50 px or 50 ppt
  bindsym Shift+p resize shrink left 50 px or 50 ppt

  bindsym h resize grow left 5 px or 5 ppt
  bindsym j resize grow down 5 px or 5 ppt
  bindsym k resize grow up 5 px or 5 ppt
  bindsym l resize grow right 5 px or 5 ppt
  bindsym Shift+h resize shrink right 5 px or 5 ppt
  bindsym Shift+j resize shrink up 5 px or 5 ppt
  bindsym Shift+k resize shrink down 5 px or 5 ppt
  bindsym Shift+l resize shrink left 5 px or 5 ppt

  bindsym Control+h resize grow left 1 px or 1 ppt
  bindsym Control+j resize grow down 1 px or 1 ppt
  bindsym Control+k resize grow up 1 px or 1 ppt
  bindsym Control+l resize grow right 1 px or 1 ppt
  bindsym Control+Shift+h resize shrink right 1 px or 1 ppt
  bindsym Control+Shift+j resize shrink up 1 px or 1 ppt
  bindsym Control+Shift+k resize shrink down 1 px or 1 ppt
  bindsym Control+Shift+l resize shrink left 1 px or 1 ppt

  # notes resize
  # TODO: this cannot be the best way to avoid large shrink being ignored
  bindsym n resize shrink right 15 px or 15 ppt; resize shrink right 14 px or 14 ppt; resize shrink right 13 px or 13 ppt; resize shrink right 12 px or 12 ppt; resize shrink right 11 px or 11 ppt; resize shrink right 10 px or 10 ppt; resize shrink right 9 px or 9 ppt; resize shrink right 8 px or 8 ppt; resize shrink right 7 px or 7 ppt; resize shrink right 6 px or 6 ppt; resize shrink right 5 px or 5 ppt; resize shrink right 4 px or 4 ppt; resize shrink right 3 px or 3 ppt; resize shrink right 2 px or 2 ppt; resize shrink right 1 px or 1 ppt; \
    resize grow right 31 px or 31 ppt; $d

  bindsym Return $d
  bindsym Escape $d
}

bindsym $mod+m mode "move"
mode "move" {
  # Move between monitors
  bindsym o focus output left; focus output up; $d
  bindsym w move workspace to output left; move workspace to output up; $d
  bindsym c move container to output left; move container to output up; $d
  bindsym a move container to output left; move container to output up; focus output left; focus output up; $d

  bindsym Return $d
  bindsym Escape $d
}

# This is the clever part
bindsym $mod+Home mode "clipboard_emoji"
mode "clipboard_emoji" {
  bindsym s exec "echo -n '¯\_(ツ)_/¯' | xclip"; $d
  bindsym Shift+s exec "echo -n '¯\\\_(ツ)\_/¯' | xclip"; $d
  bindsym b exec "echo -n '¯\_(⊙︿⊙)_/¯' | xclip"; $d
  bindsym c exec "echo -n 'ಥ_ಥ' | xclip"; $d
  bindsym d exec "echo -n '(✿ ◕‿◕) ᓄ✂╰U╯' | xclip"; $d
  bindsym g exec "echo -n 'ಠ_ಠ' | xclip"; $d
  bindsym t exec "echo -n '(╯°□°)╯︵ ┻━┻' | xclip"; $d
  bindsym w exec "echo -n '( ͡° ͜ʖ ͡°)' | xclip"; $d
  bindsym y exec "echo -n '( •_•)\n( •_•)>⌐■-■\n(⌐■_■)' | xclip"; $d
  bindsym Shift+y exec "echo -n '(  •_•)\n(  •_•)>⌐■-■\n(⌐■_■)' | xclip"; $d
  bindsym f exec "echo -n '☃' | xclip"; $d
  bindsym m exec "echo -n 🎵 | xclip"; $d

  bindsym Home exec "~/src/opensource/cspeterson/splatmoji/splatmoji copy"; $d
  bindsym $mod+Home exec "~/src/opensource/cspeterson/splatmoji/splatmoji -j copy"; $d

  bindsym Escape $d
}

bindsym $mod+End mode "clipboard_text"
mode "clipboard_text" {
  # Nonbreaking space
  bindsym space exec "echo -n ​ | xclip"; $d

  bindsym r exec "echo -n 'site:reddit.com' | xclip"; $d

  bindsym Escape $d
}

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #87AFAF #1f1f1f #2e9ef4   #87AFAF
client.focused_inactive #333333 #5f676a #1f1f1f #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #9e2222 #1f1f1f #900000   #900000
client.placeholder      #000000 #0c0c0c #1f1f1f #000000   #0c0c0c

client.background       #1f1f1f

bar {
  status_command ~/bin/i3status_custom.sh
  font pango:DejaVu Sans Mono 11
  tray_output eDP-1
  tray_output eDP-1-1
  tray_output HDMI-1-1
  tray_output LVDS-1
  tray_output LVDS-2
  colors {
    background #1f1f1f
    statusline #87AFAF
    separator #87AFAF

    # class            border  backgr. text
    focused_workspace  #87AFAF #87AFAF #1f1f1f
    active_workspace   #333333 #5f676a #1f1f1f
    inactive_workspace #333333 #222222 #888888
    urgent_workspace   #2f343a #9e2222 #1f1f1f
  }
}

# Strip trailing newline from clipboard
bindsym $mod+i exec ~/bin/strip_whitespace
bindsym $mod+Shift+i exec ~/bin/strip_whitespace -l
bindsym $mod+Control+i exec ~/bin/strip_whitespace -a
bindsym $mod+Mod1+i exec ~/bin/strip_whitespace -s

# Not sure about this one
focus_follows_mouse no

# TODO: Firefox
# Tridactyl edit in split
# bindsym --release Control+0 split h; exec xdotool key --clearmodifiers ctrl+i
# Tridactyl save edit and unsplit
# bindsym --release Control+9 exec ~/bin/tridactyl_save_and_close_split

# Firefox popups
for_window [title="Alarm - Mozilla Firefox"] floating enable,move absolute center,move workspace current

# Firefox disable Control+Q
# TODO: use xbindkeys and/or xinput instead
bindsym Control+q exec ~/bin/noctrlq.sh

# Clipboard management
bindsym $mod+Control+q exec ~/src/opensource/gilbertw1/roficlip/roficlip
bindsym $mod+Control+a exec $kitty_open 'nvim ~/.local/share/clipster/history +"call ClipsterEdit()"'

# Firefox failed
# bindsym $mod+Control+Shift+g exec "chromium-browser $(xclip -o)"
bindsym $mod+Control+Shift+g exec "google-chrome-stable $(xclip -o)"
bindsym $mod+Control+Shift+q exec "qutebrowser $(xclip -o)"

# Screenshots
bindsym $mod+Shift+F11 exec "gnome-screenshot -wB"
bindsym $mod+F11 exec "gnome-screenshot -i"

# TODO: For git d: if there is only one monitor, open a split, otherwise open a scratchpad on the other monitor

# vim:filetype=conf
