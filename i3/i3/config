# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 6
new_window 1pixel
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# All scratchpads
bindsym $mod+Control+Shift+minus move scratchpad
bindsym $mod+Control+minus scratchpad show

# Chat scratchpad
bindsym $mod+Shift+minus mark "chat", move scratchpad
bindsym $mod+minus [con_mark="chat"] scratchpad show

# Music scratchpad
bindsym $mod+Shift+equal mark "music", move scratchpad
bindsym $mod+equal [con_mark="music"] scratchpad show

# Terminal scratchpad
bindsym $mod+Control+t exec i3-sensible-terminal -name scratchterminal
for_window [instance="^scratchterminal$"] move to scratchpad
bindsym $mod+t [instance="^scratchterminal$"] scratchpad show

# Scratchpad marks
mode "makeMark" {
  bindsym a mark "a", move scratchpad; mode "default"
  bindsym b mark "b", move scratchpad; mode "default"
  bindsym c mark "c", move scratchpad; mode "default"
  bindsym d mark "d", move scratchpad; mode "default"
  bindsym e mark "e", move scratchpad; mode "default"
  bindsym f mark "f", move scratchpad; mode "default"
  bindsym g mark "g", move scratchpad; mode "default"
  bindsym h mark "h", move scratchpad; mode "default"
  bindsym i mark "i", move scratchpad; mode "default"
  bindsym j mark "j", move scratchpad; mode "default"
  bindsym k mark "k", move scratchpad; mode "default"
  bindsym l mark "l", move scratchpad; mode "default"
  bindsym m mark "m", move scratchpad; mode "default"
  bindsym n mark "n", move scratchpad; mode "default"
  bindsym o mark "o", move scratchpad; mode "default"
  bindsym p mark "p", move scratchpad; mode "default"
  bindsym q mark "q", move scratchpad; mode "default"
  bindsym r mark "r", move scratchpad; mode "default"
  bindsym s mark "s", move scratchpad; mode "default"
  bindsym t mark "t", move scratchpad; mode "default"
  bindsym u mark "u", move scratchpad; mode "default"
  bindsym v mark "v", move scratchpad; mode "default"
  bindsym w mark "w", move scratchpad; mode "default"
  bindsym x mark "x", move scratchpad; mode "default"
  bindsym y mark "y", move scratchpad; mode "default"
  bindsym z mark "z", move scratchpad; mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+grave mode "makeMark"

mode "goToMark" {
  bindsym a [con_mark="a"] scratchpad show; mode "default"
  bindsym b [con_mark="b"] scratchpad show; mode "default"
  bindsym c [con_mark="c"] scratchpad show; mode "default"
  bindsym d [con_mark="d"] scratchpad show; mode "default"
  bindsym e [con_mark="e"] scratchpad show; mode "default"
  bindsym f [con_mark="f"] scratchpad show; mode "default"
  bindsym g [con_mark="g"] scratchpad show; mode "default"
  bindsym h [con_mark="h"] scratchpad show; mode "default"
  bindsym i [con_mark="i"] scratchpad show; mode "default"
  bindsym j [con_mark="j"] scratchpad show; mode "default"
  bindsym k [con_mark="k"] scratchpad show; mode "default"
  bindsym l [con_mark="l"] scratchpad show; mode "default"
  bindsym m [con_mark="m"] scratchpad show; mode "default"
  bindsym n [con_mark="n"] scratchpad show; mode "default"
  bindsym o [con_mark="o"] scratchpad show; mode "default"
  bindsym p [con_mark="p"] scratchpad show; mode "default"
  bindsym q [con_mark="q"] scratchpad show; mode "default"
  bindsym r [con_mark="r"] scratchpad show; mode "default"
  bindsym s [con_mark="s"] scratchpad show; mode "default"
  bindsym t [con_mark="t"] scratchpad show; mode "default"
  bindsym u [con_mark="u"] scratchpad show; mode "default"
  bindsym v [con_mark="v"] scratchpad show; mode "default"
  bindsym w [con_mark="w"] scratchpad show; mode "default"
  bindsym x [con_mark="x"] scratchpad show; mode "default"
  bindsym y [con_mark="y"] scratchpad show; mode "default"
  bindsym z [con_mark="z"] scratchpad show; mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+apostrophe mode "goToMark"

# Show swap jump to previous last workspace monitor screen
bindsym $mod+o workspace back_and_forth

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal -e tmux
bindsym $mod+Shift+Return exec gnome-terminal
bindsym $mod+Control+Shift+Return exec gnome-terminal -e "nvim -u ~/.nvimrc_terminal -c 'terminal bash --rcfile ~/dotfiles/bash/bashrc_neovim'"
bindsym $mod+s exec stterm
bindsym $mod+Shift+s exec stterm -e tmux
bindsym $mod+Control+Shift+s exec stterm -e bash -c 'nvim -u ~/.nvimrc_terminal -c ter'

#edit dotfiles
bindsym $mod+Control+Shift+b exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/.bashrc'"
bindsym $mod+Control+Shift+c exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/bin/conf'"
bindsym $mod+Control+Shift+d exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/dotfiles/install /home/james/dotfiles/apt-get-things'"
bindsym $mod+Control+Shift+f exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/.pentadactylrc /home/james/.pterosaurrc /home/james/.vimperatorrc'"
bindsym $mod+Control+Shift+i exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/.i3/config /home/james/.i3status.conf'"
bindsym $mod+Control+Shift+t exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/.tmux.conf'"
bindsym $mod+Control+Shift+v exec gnome-terminal -e "bash -c 'VIMRUNTIME=~/src/opensource/neovim/neovim/runtime nvim /home/james/.vimrc /home/james/.vimrc.bundles /home/james/.nvimrc /home/james/.nvimrc_terminal'"

# Thinkpad buttons
bindsym $mod+F1 exec "amixer -D pulse set Master toggle; killall -USR1 i3status"
bindsym $mod+F2 exec "pactl set-sink-volume 0 -5%; killall -USR1 i3status"
bindsym $mod+F3 exec "pactl set-sink-volume 0 +5%; killall -USR1 i3status"
bindsym $mod+Control+F2 exec "pactl set-sink-volume 0 -1%; killall -USR1 i3status"
bindsym $mod+Control+F3 exec "pactl set-sink-volume 0 +1%; killall -USR1 i3status"
bindsym $mod+F4 exec "amixer -D pulse set Capture toggle; killall -USR1 i3status"
bindsym $mod+Shift+F2 exec "amixer -D pulse set Capture 5%-; killall -USR1 i3status"
bindsym $mod+Shift+F3 exec "amixer -D pulse set Capture 5%+; killall -USR1 i3status"
bindsym $mod+F5 exec "xbacklight -dec 20"
bindsym $mod+F6 exec "xbacklight -inc 20"
bindsym $mod+Shift+F5 exec "xbacklight -set 0"
bindsym $mod+Shift+F6 exec "xbacklight -set 100"

# start a terminal here: just use <C-S-N>
#bindsym $mod+b exec ~/.i3/shell.sh

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation, yes I know it says 'v'
bindsym $mod+g split v

# split in vertical orientation, yes I know it says 'h'
bindsym $mod+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+n focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move focused container to workspace and go there
bindsym $mod+Control+1 move container to workspace 1; workspace 1
bindsym $mod+Control+2 move container to workspace 2; workspace 2
bindsym $mod+Control+3 move container to workspace 3; workspace 3
bindsym $mod+Control+4 move container to workspace 4; workspace 4
bindsym $mod+Control+5 move container to workspace 5; workspace 5
bindsym $mod+Control+6 move container to workspace 6; workspace 6
bindsym $mod+Control+7 move container to workspace 7; workspace 7
bindsym $mod+Control+8 move container to workspace 8; workspace 8
bindsym $mod+Control+9 move container to workspace 9; workspace 9
bindsym $mod+Control+0 move container to workspace 10; workspace 10

# move focused container to workspace and go there
bindsym $mod+Control+Shift+1 focus parent; move container to workspace 1; workspace 1
bindsym $mod+Control+Shift+2 focus parent; move container to workspace 2; workspace 2
bindsym $mod+Control+Shift+3 focus parent; move container to workspace 3; workspace 3
bindsym $mod+Control+Shift+4 focus parent; move container to workspace 4; workspace 4
bindsym $mod+Control+Shift+5 focus parent; move container to workspace 5; workspace 5
bindsym $mod+Control+Shift+6 focus parent; move container to workspace 6; workspace 6
bindsym $mod+Control+Shift+7 focus parent; move container to workspace 7; workspace 7
bindsym $mod+Control+Shift+8 focus parent; move container to workspace 8; workspace 8
bindsym $mod+Control+Shift+9 focus parent; move container to workspace 9; workspace 9
bindsym $mod+Control+Shift+0 focus parent; move container to workspace 10; workspace 10

# move between monitors
bindsym $mod+m focus output left; focus output up
bindsym $mod+Control+m move workspace to output left; move workspace to output up
bindsym $mod+Shift+m move container to output left; move container to output up
bindsym $mod+Control+Shift+m move container to output left; move container to output up; focus output left; focus output up

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec sh -c '[ $(echo "NO\nYES" | dmenu -sb "#ff6600" -i -p "Really exit i3 X session?") = "YES" ] && i3-msg exit'

mode "resize" {
  bindsym u resize grow left 50 px or 50 ppt
  bindsym i resize grow down 50 px or 50 ppt
  bindsym o resize grow up 50 px or 50 ppt
  bindsym p resize grow right 50 px or 50 ppt
  bindsym Shift+u resize shrink right 50 px or 50 ppt
  bindsym Shift+i resize shrink up 50 px or 50 ppt
  bindsym Shift+o resize shrink down 50 px or 50 ppt
  bindsym Shift+p resize shrink left 50 px or 50 ppt

  bindsym h resize grow left 5 px or 5 ppt
  bindsym j resize grow down 5 px or 5 ppt
  bindsym k resize grow up 5 px or 5 ppt
  bindsym l resize grow right 5 px or 5 ppt
  bindsym Shift+h resize shrink right 5 px or 5 ppt
  bindsym Shift+j resize shrink up 5 px or 5 ppt
  bindsym Shift+k resize shrink down 5 px or 5 ppt
  bindsym Shift+l resize shrink left 5 px or 5 ppt

  bindsym Control+h resize grow left 1 px or 1 ppt
  bindsym Control+j resize grow down 1 px or 1 ppt
  bindsym Control+k resize grow up 1 px or 1 ppt
  bindsym Control+l resize grow right 1 px or 1 ppt
  bindsym Control+Shift+h resize shrink right 1 px or 1 ppt
  bindsym Control+Shift+j resize shrink up 1 px or 1 ppt
  bindsym Control+Shift+k resize shrink down 1 px or 1 ppt
  bindsym Control+Shift+l resize shrink left 1 px or 1 ppt

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
  #i3bar_command /home/james/src/opensource/S0lll0s/i3bgbar/i3bar/i3bar

  #status_command python /usr/local/lib/python2.7/dist-packages/powerline/bindings/i3/powerline-i3.py
  #font pango:DejaVu Sans Mono 11

  status_command ~/bin/i3status_custom.sh
  #status_command i3status
  #status_command i3status | ~/scripts/status/status.pl
  font pango:DejaVu Sans Mono 11
  tray_output eDP1
  #tray_output LVDS1
  colors {
    #background #000000
    #statusline #00A5FF #that neon blue
    #separator #666666

    #focused_workspace  #4c7899 #285577 #ffffff
    #active_workspace   #333333 #5f676a #ffffff
    #inactive_workspace #333333 #222222 #888888
    #urgent_workspace   #2f343a #900000 #ffffff
  }
}
#exec /usr/local/lib/python2.7/dist-packages/powerline/bindings/bar/powerline-bar.py --i3 | bar

#Startup things...
exec clipit
exec nm-applet
exec ~/.config/systemd/user/i3lock-wait-for-suspend.service
#exec volti
#exec udisks-glue

#Strip trailing newline from clipboard
bindsym $mod+i exec "echo -n $(xclip -o) | xclip"

#Not sure about this one
focus_follows_mouse no

#This is the clever part
bindsym $mod+F7 exec "echo -n '¯\_(⊙︿⊙)_/¯' | xclip"
bindsym $mod+F8 exec "echo -n '¯\_(ツ)_/¯' | xclip"
bindsym $mod+F9 exec "echo -n 'ಥ_ಥ' | xclip"
bindsym $mod+F10 exec "echo -n 'ಠ_ಠ' | xclip"
bindsym $mod+F11 exec "echo -n '(╯°□°)╯︵ ┻━┻' | xclip"
bindsym $mod+F12 exec "echo -n '( ͡° ͜ʖ ͡°)' | xclip"
bindsym $mod+shift+F7 exec "echo -n '(•_•)\n( •_•)>⌐■-■\n(⌐■_■)' | xclip"
bindsym $mod+shift+F10 exec "echo -n 'ಠ_ರೃ' | xclip"
bindsym $mod+Home exec "echo -n '☃' | xclip"

#Disgusting hack for when sites like youtube get stuck between insert and normal modes in cVim: unfocus, refocus, escape
bindsym --release $mod+braceleft scratchpad show; scratchpad show; exec "xdotool key Escape"

#Firefox popups
#for_window [title="Alarm - Mozilla Firefox"] floating enable,move absolute center,move workspace current

#Firefox fucked up, so open that shit in Chromium
bindsym $mod+Shift+G exec "chromium-browser $(xclip -o)"

# TODO: For git d: if there is only one monitor, open a split, otherwise open a scratchpad on the other monitor

# vim:filetype=conf
